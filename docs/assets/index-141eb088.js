(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&o(n)}).observe(document,{childList:!0,subtree:!0});function i(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function o(e){if(e.ep)return;e.ep=!0;const r=i(e);fetch(e.href,r)}})();const style="";class Route{constructor(s,i,o){this.name=s,this.view=i,this.default=o}isActiveRoute(s){return s.replace("#","")===this.name}}class Router{constructor(t,s){this.routes=t,this.root=document.querySelector(s),this.init()}init(){window.addEventListener("hashchange",t=>{this.hasChanged()}),this.hasChanged()}hasChanged(){try{for(const t of this.routes)if(window.location.hash.length===0&&t.default){this.dispatch(t);return}else if(t.isActiveRoute(window.location.hash.substring(1))){this.dispatch(t);return}throw new Error("Path not found")}catch(t){alert(t.message)}}dispatch(route){fetch("/views/"+route.view).then(response=>{response.ok?response.text().then(text=>{const scripts=text.match(/<script>([\s\S]*?)<\/script>/gi);if(this.root.innerHTML=text,scripts)for(let script of scripts)script=script.replace(/<(\/)?script>/gi,""),eval(script)}):alert("Something wrong")}).catch(t=>console.log(t))}}const routes=[];routes.push(new Route("main","index.html",!0));routes.push(new Route("about","about.html"));new Router(routes,"#app");
